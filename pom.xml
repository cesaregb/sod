<project xmlns="http://maven.apache.org/POM/4.0.0" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.il</groupId>
	<artifactId>sod</artifactId>
	<packaging>war</packaging>
	<version>1.0</version>
	<name>sod Maven Webapp</name>
	<url>http://maven.apache.org</url>

	<properties>
        <slf4j.version>1.7.13</slf4j.version>
		<logback.version>1.0.1</logback.version>
		<jackson.version>2.5.0</jackson.version>
		<spring.version>4.2.4.RELEASE</spring.version> 
		<spring.security.version>4.0.3.RELEASE</spring.security.version> 
		<org.aspectj.verision>1.8.7</org.aspectj.verision> 
		<commons-io.version>2.4</commons-io.version>
        <commons-lang.version>2.6</commons-lang.version>
	</properties>
    
    <repositories>
        <repository>
            <id>java.net2</id>
            <name>Repository hosting the jee6 artifacts</name>
            <url>http://download.java.net/maven/2</url>
        </repository>
    </repositories>

	<dependencies>
		<!-- jsoup HTML parser library @ http://jsoup.org/ -->
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.8.3</version>
		</dependency>
		<!-- Jackson (JSON processor) -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-core</artifactId>
		    <version>${jackson.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-annotations</artifactId>
		    <version>${jackson.version}</version>
		</dependency>
		
		<dependency>
		   <groupId>com.fasterxml.jackson.core</groupId>
		   <artifactId>jackson-databind</artifactId>
		   <version>${jackson.version}</version>
		</dependency>
		<!-- General libraries  -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<version>6.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>14.0.1</version>
		</dependency>
		<dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons-lang.version}</version>
        </dependency>
		<!-- JSTL -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- spring-context which provides core functionality -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- The spring-aop module provides an AOP Alliance-compliant aspect-oriented 
			programming implementation allowing you to define -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- AspectJ dependencies -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${org.aspectj.verision}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjtools</artifactId>
            <version>${org.aspectj.verision}</version>
        </dependency>
		<!-- The spring-webmvc module (also known as the Web-Servlet module) contains 
			Springâ€™s model-view-controller (MVC) and REST Web Services implementation 
			for web applications -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- The spring-web module provides basic web-oriented integration features 
			such as multipart file upload functionality and the initialization of the 
			IoC container using Servlet listeners and a web-oriented application context -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<!-- View -->
		<!-- <dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-mongodb</artifactId>
			<version>1.3.1.RELEASE</version>
		</dependency> -->
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit-dep</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<build>
		<pluginManagement>
			<plugins>
		      <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-war-plugin</artifactId>
		        <configuration>
		          <failOnMissingWebXml>false</failOnMissingWebXml>
		        </configuration>
		      </plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.0.2</version>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>9.2.6.v20141205</version>
					<configuration>
						<httpConnector>
							<port>${selfpub.registration.api.port}</port>
						</httpConnector>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.heroku.sdk</groupId>
					<artifactId>heroku-maven-plugin</artifactId>
					<version>0.5.4</version>
					<configuration>
						<appName>simple-html-parser</appName>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.4</version>
					<executions>
						<execution>
							<id>copy-dependencies</id>
							<phase>package</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

			</plugins>
		</pluginManagement>
		<finalName>sod</finalName>
	</build>
	
	<profiles>
		<profile>
			<id>local</id>
			<activation>
                <activeByDefault>true</activeByDefault>
            </activation>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
					<resource>
						<directory>src/main/config/local</directory>
					</resource>
				</resources>
			</build>
			<!-- #Please note that the value selfpub.registration.api.port should 
				be the same as # the defined in the pom.xml for the profile property "selfpub.registration.api.port" -->
			<properties>
				<selfpub.registration.api.port>8080</selfpub.registration.api.port>
			</properties>
		</profile>
		<profile>
			<id>dev</id>
			<activation>
				<property>
					<name>env</name>
					<value>dev</value>
				</property>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
					<resource>
						<directory>src/main/config/dev</directory>
					</resource>
				</resources>
			</build>
			<!-- #Please note that the value selfpub.registration.api.port should 
				be the same as # the defined in the pom.xml for the profile property "selfpub.registration.api.port" -->
			<properties>
				<selfpub.registration.api.port>8080</selfpub.registration.api.port>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<activation>
				<property>
					<name>env</name>
					<value>prod</value>
				</property>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
					<resource>
						<directory>src/main/config/prod</directory>
					</resource>
				</resources>
			</build>
			<!-- #Please note that the value selfpub.registration.api.port should 
				be the same as # the defined in the pom.xml for the profile property "selfpub.registration.api.port" -->
			<properties>
				<selfpub.registration.api.port>8080</selfpub.registration.api.port>
			</properties>
		</profile>
	</profiles>
</project>
